{"version":3,"sources":["xml/books-react.xml","components/Book.js","App.js","reportWebVitals.js","index.js"],"names":["Book","props","unavailableConverted","x","unavailable","useState","availability","setAvailability","orderBook","alert","data","$","id","axios","post","then","res","console","log","catch","error","onClick","author","title","genre","price","publish_date","description","parseString","require","App","book","setBook","useEffect","get","books","response","err","result","catalog","className","map","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0MAAe,MAA0B,wC,gCCsD1BA,EAjDF,SAACC,GAGV,IAAIC,EACyBA,EAAN,KAAvBD,EAAME,EAAEC,YAA4C,MAA+B,KAEnF,MAAwCC,mBAASH,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAOMC,EAAY,WACdD,EAAgB,OAChBE,MAAM,8CAIN,IAAIC,EAAOT,EAAME,EAAEQ,EAAEC,GAGrBC,IACKC,KAAK,gCAAiCJ,GACtCK,MAAK,SAAAC,GACFC,QAAQC,IAAIF,MAEfG,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OAKxB,OACI,gCACI,+BACI,6BAAI,wBAAQC,QAAS,WA1BpB,MA0B4CpB,EAAME,EAAEC,YA1B3D,IAA+B,QAAjBE,EAAyBG,MAAM,sCAAwCD,KA0B3E,qBACJ,6BAAKP,EAAME,EAAEmB,SACb,6BAAKrB,EAAME,EAAEoB,QACb,6BAAKtB,EAAME,EAAEqB,QACb,6BAAKvB,EAAME,EAAEsB,QACb,6BAAKxB,EAAME,EAAEuB,eACb,6BAAKzB,EAAME,EAAEwB,cACb,6BAAKrB,UCxCjBsB,EAAcC,EAAQ,IAAUD,YA+CrBE,MA5Cf,WAEE,MAAwBzB,mBAAS,IAAjC,mBAAO0B,EAAP,KAAaC,EAAb,KAgBA,OAdAC,qBAAU,WACRpB,IAAMqB,IAAIC,EAAO,CACf,eAAgB,mCAEfpB,MAAK,SAACqB,GACLR,EAAYQ,EAAS1B,MAAM,SAAU2B,EAAKC,GACxCN,EAAQM,EAAOC,QAAQR,cAI1B,IAKH,qBAAKS,UAAU,MAAf,SACE,kCACE,gCACE,+BACA,uBACA,wCACA,uCACA,uCACA,uCACA,8CACA,6CACA,kDAIDT,EAAKU,KAAI,SAACtC,EAAGuC,GACZ,OACE,cAAC,EAAD,CAAMvC,EAAGA,GAAQuC,YCnCdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFDO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAIJb,K","file":"static/js/main.65802614.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/books-react.8d2525be.xml\";","import axios from 'axios';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\nconst Book = (props) => {\r\n\r\n  \r\n    var unavailableConverted;\r\n    props.x.unavailable == '1' ? unavailableConverted = 'yes' : unavailableConverted = 'no';\r\n\r\n    const [availability, setAvailability] = useState(unavailableConverted)\r\n\r\n\r\n    const checkAvailability = (x) => {\r\n        x[0] === '1' || availability === 'yes' ? alert('The book has already been ordered!') : orderBook()\r\n    }\r\n\r\n    const orderBook = () => {\r\n        setAvailability('yes')\r\n        alert('The book you have chosen has been ordered!')\r\n\r\n\r\n\r\n        var data = props.x.$.id;\r\n\r\n        // post request pro odeslání identifikátoru knihy na backend\r\n        axios\r\n            .post('http://localhost:3000/ordered', data)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                <td><button onClick={() => checkAvailability(props.x.unavailable)}>ORDER</button></td>\r\n                <td>{props.x.author}</td>\r\n                <td>{props.x.title}</td>\r\n                <td>{props.x.genre}</td>\r\n                <td>{props.x.price}</td>\r\n                <td>{props.x.publish_date}</td>\r\n                <td>{props.x.description}</td>\r\n                <td>{availability}</td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Book","import books from './xml/books-react.xml'\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport Book from './components/Book';\n\n\nvar parseString = require('xml2js').parseString;\n\n\nfunction App() {\n\n  const [book, setBook] = useState([])\n\n  useEffect(() => {\n    axios.get(books, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    })\n      .then((response) => {\n        parseString(response.data, function (err, result) {\n          setBook(result.catalog.book)\n        });\n        \n      });\n    }, [])\n\n\n\n  return (\n    <div className=\"App\">\n      <table>\n        <thead>\n          <tr>\n          <th></th>\n          <th>Author</th>\n          <th>Title</th>\n          <th>Genre</th>\n          <th>Price</th>\n          <th>Publish date</th>\n          <th>Description</th>\n          <th>Unavailable</th>\n          </tr>\n        </thead>\n\n        {book.map((x, key) => {\n          return (\n            <Book x={x} key={key} />\n          )\n        })}\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}